SOLUTION 1
class Solution {
public:
    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {
        vector<int>ans(nums1.size(), -1); 
        vector<int>ans1(nums2.size(), -1); 
        stack<int>s ; 
        s.push(nums2[nums2.size()-1]) ;
        for(int i=nums2.size()-2 ; i>=0 ; i--){
            while(!s.empty() && s.top() < nums2[i]){
                s.pop() ;
            }
            if(!s.empty()){
                ans1[i] = s.top() ;
            }
            if(find(nums1.begin(), nums1.end(), nums2[i])!=nums1.end()){
                int val = find(nums1.begin(), nums1.end(), nums2[i]) - nums1.begin() ;
                ans[val] = ans1[i] ;
            }
            s.push(nums2[i]) ;
        }
        return ans ;
    }
};
TC - O(N.M) 
SC - O(N+M)




SOLUTION 2 
class Solution {
public:
    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {
        stack<int>st ; 
        vector<int>ans(nums1.size(), -1) ;
        map<int,int>m ;
        for(int num:nums2){
            while(!st.empty() and st.top() < num){
                m[st.top()] = num;
                st.pop();
            }
            st.push(num);
        }
        for(int i = 0 ; i < nums1.size() ; i++){
            if(m[nums1[i]]) 
                ans[i] = m[nums1[i]];
        }
        return ans;

    }
};

TC - O(N+M)
SC - O(N+M)
