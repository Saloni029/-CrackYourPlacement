class Solution {
public:
    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int color) {
        int n = image.size(), m = image[0].size() ;
        vector<vector<int>>vis(n, vector<int>(m, 0)) ; 
        
        queue<pair<int,int>>q ; 
        vis[sr][sc] = 1 ; 
        q.push({sr,sc}) ;
        int color1 = image[sr][sc] ;
        while(!q.empty()){
            int r = q.front().first ;
            int c = q.front().second ;
            q.pop() ;
            if(image[r][c]==color1) image[r][c] = color ;
            vector<int>dir = {0, -1, 0, 1, 0} ;
            for(int i=0 ; i<4 ; i++){
                int row = r + dir[i]  ;
                int col = c + dir[i+1] ;
                if(row>=0 && row<n && col>=0 && col<m && !vis[row][col] && image[row][col]==color1){
                    vis[row][col] = 1;
                    q.push({row, col}) ;
                }
            }
        }

        return image;
    }
}; 

TC - 0(N*M)
SC - O(N*M)
